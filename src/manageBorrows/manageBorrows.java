/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manageBorrows;

import admin.admindashboard;
import manageBooks.*;
import manageUser.*;
import auth.*;
import auth.*;
import javax.swing.JOptionPane;

public class manageBorrows extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public manageBorrows() {
        initComponents();
        loadBorrows();
    }

    private void loadBorrows() {
        try {
            config.dbConnect db = new config.dbConnect();
            String query = "SELECT b.BorrowID, u.Username, bk.Title, b.BorrowDate, b.ReturnDate, b.Status " +
                           "FROM borrow b " +
                           "JOIN user u ON b.UserID = u.UserID " +
                           "JOIN book bk ON b.BookID = bk.BookID";
            java.sql.ResultSet rs = db.getData(query);

            String[] columns = {"BorrowID", "Username", "Book Title", "Borrow Date", "Return Date", "Status"};
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(columns, 0);

            while (rs.next()) {
                int borrowId = rs.getInt("BorrowID");
                String username = rs.getString("Username");
                String bookTitle = rs.getString("Title");
                String borrowDate = rs.getString("BorrowDate");
                String returnDate = rs.getString("ReturnDate");
                String status = rs.getString("Status");

                Object[] row = {borrowId, username, bookTitle, borrowDate, returnDate, status};
                model.addRow(row);
            }
            borrowstable.setModel(model);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Failed to load borrowed books: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backbutton = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        borrowstable = new javax.swing.JTable();
        addBooks = new javax.swing.JButton();
        editBooks = new javax.swing.JButton();
        activeborrow = new javax.swing.JButton();
        returnedstatus = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(52, 73, 94));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Borrows");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 500, 50));

        backbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/backicon.png"))); // NOI18N
        backbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbuttonMouseClicked(evt);
            }
        });
        jPanel2.add(backbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 60));

        borrowstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(borrowstable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 750, -1));

        addBooks.setBackground(new java.awt.Color(255, 255, 255));
        addBooks.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addBooks.setForeground(new java.awt.Color(0, 0, 0));
        addBooks.setText("Add");
        addBooks.setBorder(null);
        addBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBooksActionPerformed(evt);
            }
        });
        jPanel2.add(addBooks, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 120, 30));

        editBooks.setBackground(new java.awt.Color(255, 255, 255));
        editBooks.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editBooks.setForeground(new java.awt.Color(0, 0, 0));
        editBooks.setText("Edit");
        editBooks.setBorder(null);
        editBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBooksActionPerformed(evt);
            }
        });
        jPanel2.add(editBooks, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 120, 30));

        activeborrow.setBackground(new java.awt.Color(255, 255, 255));
        activeborrow.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        activeborrow.setForeground(new java.awt.Color(0, 0, 0));
        activeborrow.setText("Active");
        activeborrow.setBorder(null);
        activeborrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeborrowActionPerformed(evt);
            }
        });
        jPanel2.add(activeborrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 120, 30));

        returnedstatus.setBackground(new java.awt.Color(255, 255, 255));
        returnedstatus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        returnedstatus.setForeground(new java.awt.Color(0, 0, 0));
        returnedstatus.setText("Returned");
        returnedstatus.setBorder(null);
        returnedstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnedstatusActionPerformed(evt);
            }
        });
        jPanel2.add(returnedstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 120, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 830, 560));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Background.png"))); // NOI18N
        jPanel1.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbuttonMouseClicked
        new admindashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backbuttonMouseClicked

    private void addBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBooksActionPerformed
        new addBorrow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addBooksActionPerformed

    private void editBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBooksActionPerformed
        int selectedRow = borrowstable.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a borrow record to edit.");
            return;
        }
        String status = (String) borrowstable.getValueAt(selectedRow, 5);
        if ("Returned".equalsIgnoreCase(status) || "Active".equalsIgnoreCase(status)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Cannot edit a borrow record that is Active or Returned.");
            return;
        }
        int borrowId = (int) borrowstable.getValueAt(selectedRow, 0);
        String username = (String) borrowstable.getValueAt(selectedRow, 1);
        String bookTitle = (String) borrowstable.getValueAt(selectedRow, 2);
        String borrowDate = (String) borrowstable.getValueAt(selectedRow, 3);
        String returnDate = (String) borrowstable.getValueAt(selectedRow, 4);

        editBorrow editForm = new editBorrow();
        editForm.setBorrowDetails(borrowId, username, bookTitle, borrowDate, returnDate, status);
        editForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editBooksActionPerformed

    private void activeborrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeborrowActionPerformed
        int selectedRow = borrowstable.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a borrow record to set as Active.");
            return;
        }
        String currentStatus = (String) borrowstable.getValueAt(selectedRow, 5);
        if ("Returned".equalsIgnoreCase(currentStatus)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Cannot activate a borrow record that is Returned.");
            return;
        }
        if ("Active".equalsIgnoreCase(currentStatus)) {
            javax.swing.JOptionPane.showMessageDialog(this, "The selected borrow record is already Active.");
            return;
        }
        int borrowId = (int) borrowstable.getValueAt(selectedRow, 0);
        try {
            config.dbConnect db = new config.dbConnect();
            String updateSql = "UPDATE borrow SET Status = 'Active' WHERE BorrowID = " + borrowId;
            int result = db.InsertData(updateSql);
            if (result == 1) {
                javax.swing.JOptionPane.showMessageDialog(this, "Borrow status set to Active.");
                loadBorrows();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Failed to update status. Please try again.");
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error updating status: " + e.getMessage());
        }
    }//GEN-LAST:event_activeborrowActionPerformed

    private void returnedstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnedstatusActionPerformed
        int selectedRow = borrowstable.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a borrow record to set as Returned.");
            return;
        }
        int borrowId = (int) borrowstable.getValueAt(selectedRow, 0);
        String currentStatus = (String) borrowstable.getValueAt(selectedRow, 5);
        if ("Returned".equalsIgnoreCase(currentStatus)) {
            javax.swing.JOptionPane.showMessageDialog(this, "The selected borrow record is already Returned.");
            return;
        }
        try {
            config.dbConnect db = new config.dbConnect();
            String updateSql = "UPDATE borrow SET Status = 'Returned' WHERE BorrowID = " + borrowId;
            int result = db.InsertData(updateSql);
            if (result == 1) {
                // Increase copies available in book table by 1
                String updateBookSql = "UPDATE book SET CopiesAvailable = CopiesAvailable + 1 WHERE BookID = (SELECT BookID FROM borrow WHERE BorrowID = " + borrowId + ")";
                db.InsertData(updateBookSql);

                javax.swing.JOptionPane.showMessageDialog(this, "Borrow status set to Returned.");
                loadBorrows();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Failed to update status. Please try again.");
            }
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error updating status: " + e.getMessage());
        }
    }//GEN-LAST:event_returnedstatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageBorrows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageBorrows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageBorrows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageBorrows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageBorrows().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton activeborrow;
    private javax.swing.JButton addBooks;
    private javax.swing.JLabel backbutton;
    private javax.swing.JTable borrowstable;
    private javax.swing.JButton editBooks;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnedstatus;
    // End of variables declaration//GEN-END:variables
}
